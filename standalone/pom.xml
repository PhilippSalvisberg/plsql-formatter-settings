<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- The Basics -->
    <groupId>com.trivadis.plsql.formatter</groupId>
    <artifactId>tvdformat</artifactId>
    <version>21.2.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.8</jdk.version>
        <sqlcl.libdir>/usr/local/bin/sqlcl/lib</sqlcl.libdir>
        <sqlcl.version>21.2.2</sqlcl.version>
        <graalvm.version>21.2.0</graalvm.version>
        <skip.native>true</skip.native>
    </properties>
    <dependencies>
        <!-- GraalVM JavaScript engine used for testing format.js as if executed via SQLcl -->
        <!-- It's the default script engine also for Arbori callback functions since SQLcl 21.2.0 -->
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js</artifactId>
            <version>${graalvm.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js-scriptengine</artifactId>
            <version>${graalvm.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- SQLcl dependencies not available in public Maven repositories -->
        <dependency>
            <groupId>oracle.dbtools</groupId>
            <artifactId>dbtools-common</artifactId>
            <version>${sqlcl.version}</version>
            <scope>system</scope>
            <systemPath>${sqlcl.libdir}/dbtools-common.jar</systemPath>
        </dependency>
        <!-- GraalVM native image and Context -->
        <dependency>
            <groupId>org.graalvm.sdk</groupId>
            <artifactId>graal-sdk</artifactId>
            <version>${graalvm.version}</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <!-- Build Settings -->
    <build>
        <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>com.googlecode.addjars-maven-plugin</groupId>
                <artifactId>addjars-maven-plugin</artifactId>
                <version>1.0.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>add-jars</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${sqlcl.libdir}</directory>
                                    <includes>
                                        <include>**/dbtools-common.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.8.1</version>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <finalName>${artifactId}</finalName>
                    <shadedArtifactAttached>false</shadedArtifactAttached>
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                        <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <manifestEntries>
                                <Main-Class>com.trivadis.plsql.formatter.TvdFormat</Main-Class>
                                <Class-Path>.</Class-Path>
                            </manifestEntries>
                        </transformer>
                    </transformers>
                    <filters>
                        <filter>
                            <!-- remove conflicting resources (not required) -->
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/MANIFEST.MF</exclude>
                                <exclude>module-info.class</exclude>
                                <exclude>META-INF/versions/**</exclude>
                            </excludes>
                        </filter>
                        <filter>
                            <!-- include required packages for formatter -->
                            <artifact>*:*dbtools-common*</artifact>
                            <includes>
                                <include>oracle/dbtools/app/**</include>
                                <include>oracle/dbtools/arbori/**</include>
                                <include>oracle/dbtools/parser/**</include>
                                <include>oracle/dbtools/raptor/*</include>
                                <include>oracle/dbtools/raptor/utils/**</include>
                                <include>oracle/dbtools/util/**</include>
                            </includes>
                        </filter>
                        <filter>
                            <!-- include all classes and resources from this project -->
                            <artifact>*:tvdformat</artifact>
                            <includes>
                                <include>**</include>
                            </includes>
                        </filter>
                    </filters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.graalvm.nativeimage</groupId>
                <artifactId>native-image-maven-plugin</artifactId>
                <version>${graalvm.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>native-image</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skip.native}</skip>
                    <imageName>${project.artifactId}</imageName>
                    <mainClass>com.trivadis.plsql.formatter.TvdFormat</mainClass>
                    <!-- Creating a native image with "-language:js -no-fallback -H:ReflectionConfigurationFiles=..."
                         was e dead end. There were various issues, such as
                             - different behavior between JS/Java Strings and their methods
                             - laborious identification of classes used via reflection
                             - long build times (~280 seconds)
                             - very large image size (437MB)
                         Therefore, creating a native image which requires a JDK was much simpler.
                         The drawback is a slower startup time. However, loading 437MB is not fast ether, at least the first time.
	                -->
                    <buildArgs>
                        -H:IncludeResources=.* --force-fallback
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- More Project Information -->
    <name>com.trivadis.org.plsql.formatter.settings</name>
    <description>PL/SQL and SQL Formatter</description>
    <url>https://github.com/Trivadis/plsql-formatter-settings</url>
    <inceptionYear>2021</inceptionYear>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <organization>
        <name>Trivadis</name>
        <url>https://www.trivadis.com/</url>
    </organization>
    <developers>
        <developer>
            <email>philipp.salvisberg@trivadis.com</email>
            <name>Philipp Salvisberg</name>
            <url>https://github.com/PhilippSalvisberg/</url>
            <id>PhilippSalvisberg</id>
            <roles>
                <role>lead</role>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <!-- Environment Settings -->
    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/Trivadis/plsql-formatter-settings/issues</url>
    </issueManagement>
    <scm>
        <connection>scm:git:git://github.com/Trivadis/plsql-formater-settings.git</connection>
        <developerConnection>scm:git:git@github.com:Triviadis/plsql-formatter-settings.git</developerConnection>
        <tag>main</tag>
        <url>https://github.com/Trivadis/plsql-formatter-settings</url>
    </scm>

</project>